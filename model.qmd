---
title: "Modeling Broadband Access"
format: html
execute:
  echo: false
  warning: false
---

## Modeling Broadband Access

To better understand the factors influencing broadband access across U.S. counties, we developed a **linear regression model**. The outcome variable is the **percentage of households with broadband internet subscriptions**. The model includes five key predictors:

- **Median household income** (in thousands of dollars),
- **Percentage of the population identifying as White**,
- **Percentage of adults with a bachelor's degree**, and
- **Percentage of individuals currently enrolled in school**.
- **Median age of the population.**.

### Model Formula

$$
\text{Broadband Access} = \beta_0 + \beta_1 \cdot \text{Income} + \beta_2 \cdot \text{White} + \beta_3 \cdot \text{Bachelor's Degree} + \beta_4 \cdot \text{School Enrollment} + \beta_5 \cdot \text{Age} + \epsilon
$$

$$
\text{Broadband Access} = 209616.6 + 2343.0 \cdot \text{Income} + 415.3 \cdot \text{White} - 2345.0 \cdot \text{Bachelor's Degree} - 3056.9 \cdot \text{School Enrollment} - 1097.0 \cdot \text{Age} + \varepsilon
$$

### Data Preparation

```{r}
library(tidycensus)
library(tidyverse)
library(broom)

# Load the saved RDS file
acs_extended <- readRDS("acs_extended_2019_2023.rds")

# Clean and reshape the data
acs_clean <- acs_extended %>%
  select(GEOID, NAME, variable, estimate) %>%
  pivot_wider(names_from = variable, values_from = estimate) %>%
  rename(
    county          = NAME,
    broadband_total = broadband_total,
    median_income   = median_income,
    pct_white       = pct_white,
    pct_bachelor    = pct_bachelor,
    pct_enrolled    = pct_enrolled,
    median_age      = median_age
  ) %>%
  mutate(
    median_income_k = median_income / 1000
  ) %>%
  drop_na(median_income_k, pct_white, pct_bachelor, pct_enrolled, median_age, broadband_total)


```

```{r}
# Fit the model
model <- lm(broadband_total ~ median_income_k + pct_white + pct_bachelor + pct_enrolled + median_age, data = acs_clean)
summary(model)


# Model summary
summary(model)

```


```{r}
# Tidy model output with confidence intervals
model_results <- tidy(model, conf.int = TRUE)
model_results

```

```{r}
library(scales)

# Add predicted values
acs_clean$predicted <- predict(model)

# Create the plot
ggplot(acs_clean, aes(x = broadband_total, y = predicted)) +
  geom_point(alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "blue", linetype = "dashed") +
  scale_x_continuous(
    labels = comma_format(),  # convert scientific notation to commas (e.g., 10,000)
    name = "Broadband Subscriptions (broadband_total)"
  ) +
  scale_y_continuous(
    labels = comma_format(),  # same for Y-axis
    name = "Predicted Broadband Subscriptions"
  ) +
  labs(
    title = "Predicted vs Actual Broadband Access"
  ) +
  theme_minimal()

```

```{r}
# Fixed histogram - focusing on the main distribution
ggplot(acs_clean, aes(x = broadband_total)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 50) +
  scale_x_continuous(
    labels = scales::comma,
    limits = c(0, quantile(acs_clean$broadband_total, 0.95, na.rm = TRUE))  # Focus on 95% of data
  ) +
  scale_y_continuous(
    breaks = seq(0, 2000, by = 500),
    labels = scales::comma
  ) +
  labs(
    title = "Distribution of Actual Broadband Subscriptions",
    x = "Broadband Subscriptions (broadband_total)",
    y = "Count of Counties"
  ) +
  theme_minimal()

```

```{r}
# Alternative: Use different binwidth instead of bins
ggplot(acs_clean, aes(x = broadband_total)) +
  geom_histogram(fill = "steelblue", color = "black", binwidth = 5000) +
  scale_x_continuous(
    labels = scales::comma,
    limits = c(0, 200000)  # Adjust this limit based on your data
  ) +
  scale_y_continuous(
    breaks = seq(0, 2000, by = 500),
    labels = scales::comma
  ) +
  labs(
    title = "Distribution of Actual Broadband Subscriptions",
    x = "Broadband Subscriptions (broadband_total)",
    y = "Count of Counties"
  ) +
  theme_minimal()
```

```{r}


# Or simply reduce bins and let outliers extend the axis
ggplot(acs_clean, aes(x = broadband_total)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 15) +
  scale_x_continuous(labels = scales::comma) +
  scale_y_continuous(
    breaks = seq(0, 2000, by = 500),
    labels = scales::comma
  ) +
  labs(
    title = "Distribution of Actual Broadband Subscriptions",
    x = "Broadband Subscriptions (broadband_total)",
    y = "Count of Counties"
  ) +
  theme_minimal()

```
```{r}
library(ggeffects)

# Plot marginal effect for each variable
plot(ggeffect(model, terms = "median_income_k"))
plot(ggeffect(model, terms = "pct_white"))
plot(ggeffect(model, terms = "pct_bachelor"))
plot(ggeffect(model, terms = "pct_enrolled"))
plot(ggeffect(model, terms = "median_age"))

```

```{r}
library(plotly)

plot_ly(data = acs_clean,
        x = ~broadband_total,
        y = ~predicted,
        type = 'scatter',
        mode = 'markers') %>%
  layout(title = "Predicted vs Actual Broadband Access",
         xaxis = list(title = "Actual Broadband Access (%)"),
         yaxis = list(title = "Predicted Broadband Access (%)"))
```
